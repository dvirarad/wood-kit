name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  quick-validation:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies and run full test suite
      run: |
        # Install root dependencies
        if [ -f package.json ]; then
          npm install
        fi
        
        # Install backend dependencies
        cd backend
        npm ci
        
        # Install frontend dependencies
        cd ../frontend
        npm ci
        cd ..

    - name: Wait for MongoDB
      run: |
        timeout 60s bash -c 'until mongosh --host localhost:27017 --eval "print(\"Connected to MongoDB\")" --quiet; do sleep 1; done'

    - name: Run backend unit tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/woodkits-test

    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_API_URL: http://localhost:6003/api/v1

    - name: Quick API validation (E2E tests disabled for speed)
      timeout-minutes: 3
      run: |
        # Start backend server
        cd backend
        NODE_ENV=test PORT=6003 MONGODB_URI=mongodb://localhost:27017/woodkits-test node server.js &
        SERVER_PID=$!
        
        # Wait for server to be ready with timeout
        timeout 60s bash -c 'until curl -s http://localhost:6003/health > /dev/null; do sleep 2; done' || {
          echo "Server startup timeout"
          kill $SERVER_PID 2>/dev/null || true
          exit 1
        }
        
        # Quick health check only
        curl -f http://localhost:6003/health || {
          echo "Health check failed"
          kill $SERVER_PID 2>/dev/null || true
          exit 1
        }
        
        echo "API validation passed!"
        # Clean up
        kill $SERVER_PID 2>/dev/null || true
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/woodkits-test
        ADMIN_USERNAME: admin
        ADMIN_PASSWORD: admin123

    - name: PR Check Summary
      run: |
        echo "🎉 Pull Request validation completed successfully!"
        echo "✅ Backend tests passed"
        echo "✅ Frontend build successful"
        echo "✅ API validation passed"
        echo "✅ Ready to merge to main"

  pr-comment:
    runs-on: ubuntu-latest
    needs: [quick-validation]
    if: always()
    
    steps:
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const status = '${{ needs.quick-validation.result }}';
          const body = status === 'success' 
            ? '🎉 **All checks passed!** ✅\n\n- Backend tests: ✅\n- Frontend build: ✅\n- API validation: ✅\n\nThis PR is ready to merge!'
            : '❌ **Some checks failed**\n\nPlease check the workflow logs and fix the issues before merging.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });